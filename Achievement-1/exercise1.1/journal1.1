Exercise 1.1: Getting Started with Python 
Learning Goals

Summarize the uses and benefits of Python for web development
Prepare your developer environment for programming with Python

Reflection Questions

1. In your own words, what is the difference between frontend and backend web development?
 If you were hired to work on backend programming for a web application, what kinds of operations would you be working on?

 The difference between front-end and back-end development is that front-end is what the user or clients sees, and the backend is everything
 that happends behind the scenes. What appears in the browser or app, the buttons, forms, images, text, etc; everything that a user is exposed
 to and can interact with is the front-end.
 The database, the api which connects the front-end to the backend, the server on which the api and database are hosted; this is all backend.
 So if I were hired to work as a back-end developper, my tasks could involve deployment and managed of a database, ensuring that all API endpointts
 work correctly, ensuring that the data is being stored correctly, etc.

2. Imagine you’re working as a full-stack developer in the near future.
 Your team is asking for your advice on whether to use JavaScript or Python for a project, and you think Python would be the better choice.
  How would you explain the similarities and differences between the two languages to your team?
   Drawing from what you learned in this Exercise, what reasons would you give to convince your team that Python is the better option? 
(Hint: refer to the Exercise section “The Benefits of Developing with Python”)

Python and JS are both dynamic scripting languages, which means that type assingment to variables is mutable. JS is mostly used for front-end 
projects as it is the language of the browser. On the backend, Node.js, is the JS used. Python is primarily a backend language, and even though 
it can be run on the frontend with some frameworks such as Kivy and Tkinter, it is most suited for machine learning, complex mathematics, amongst others. One major advantage of python is its ease of readability, making it easy to write
and understand. Therefore, if the project involved mostly back-end development, and had a large team of engineers working on it, Python would
seem to me like the most appropriate choice.

3. Now that you’ve had an introduction to Python, write down 3 goals you have for yourself and your learning during this Achievement.
  
  1. I want to become familiar with the language and be able to design simple and medium complexity apps using it.
  2. I want to learn the different strengths and weaknesses of python in order to expand my previous coding knowledge.
  3. I want to strengthen my back-end coding skills.